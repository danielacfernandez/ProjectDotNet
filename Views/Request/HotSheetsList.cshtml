@model ServiceTRAX.Models.ViewModels.ServiceTRAXListHotSheetsViewModel
@using ServiceTRAX.Models.API

@{
    ViewData["Title"] = "Hot Sheets";
}

@section SubMenu {
    @await Component.InvokeAsync("SideMenu", new SideMenuData { OrganizationID = Model.OrganizationID, ProjectID = Model.ProjectID, RequestID = Model.RequestID, UserID=Model.UserID  })
}


@section StyleSheets {

    <style>
        .gridContent {
            position: absolute;
            border: solid 1px #c0c0c0;
            left: 20px;
            top: 170px;
            right: 20px;
            bottom: 70px;
        }
    </style>
}

@section Scripts {

    <link rel="stylesheet" href="~/css/mygrid.1.0.css">
    <script language="javascript" type="text/javascript" src="~/lib/mygrid.1.0.js?1"></script>
    <script type='text/javascript' src='~/override/main-custom.js'></script>

    <script type="text/javascript">

        let userGridParameters = () => ({ ORGANIZATION_ID: @Model.OrganizationID, USER_ID: @Model.UserID, REQUEST_ID: @Model.RequestID, PROJECT_ID: @Model.ProjectID });
        let userGridEvents = {
            buttonClick: function (btn, row) {
                if (btn.id === 'OpenHotSheet') {
                    redirectToPage('/Request/HotSheet', params = { 'HotSheetID': row.HOTSHEET_ID, 'OrganizationID': @Model.OrganizationID, 'RequestID': @Model.RequestID, 'PROJECT_ID': @Model.ProjectID }, true);
                }
            }
        };

        let oGrid = new clsMyGrid('HotSheets', document.getElementById('hsGrid'), null, userGridEvents, true, userGridParameters());

    </script>

}

@*<div class="row">
    <div class="col-12 mt-3">
        <h2>HOT SHEETS FOR REQ# @Model.RequestID</h2>
    </div>
</div>*@
<div class="row">
    <div class="col-12 mt-3">
        <h2>HOT SHEETS</h2>
    </div>
</div>
<div id="content-wrap">
    <div class="gridContent" id="hsGrid"></div>
</div>

