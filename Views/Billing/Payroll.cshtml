@model ServiceTRAX.Models.ViewModels.PayrollViewModel

@{
    ViewData["Title"] = "Payroll";
}

@section Scripts {
    <script type='text/javascript' src='~/lib/knockout/knockout-latest.js'></script>
    <script type='text/javascript' src='~/js/ko-bindingHandlers.js'></script>
    <script type='text/javascript' src='~/lib/datepicker.js'></script>
    <script>
        $(function () {
            var model =  @Html.Raw(Json.Serialize(Model));
            console.log(model);

            model.endDate = ko.observable(model.endDate);
            model.startDate = ko.observable(model.startDate);
            model.payrollCompany = ko.observable(model.payrollCompany);
            model.batchID = ko.observable(model.batchID);

            model.generateCSV = () => {

                model.dataToSend = {
                    StartDate: model.startDate(),
                    EndDate: model.endDate(),
                    BatchID: model.batchID(),
                    PayrollCompany: model.payrollCompany()
                }
                console.log(model.dataToSend);

                if (model.startDate() === null) {
                    alert('Please input Start Date');
                } else {
                    if (model.endDate() === null) {
                        alert('Please input End Date');
                    } else {
                        if (model.batchID() === null) {
                            alert('Please input Batch ID');
                        } else {
                            $('#callCSV').attr('href', `/Billing/GetPayrollData?StartDate=${model.stringDate(model.startDate())}&EndDate=${model.stringDate(model.endDate())}&BatchID=${model.batchID()}&PayrollCompany=${model.payrollCompany()}`);
                            $("#callCSV")[0].click();
                        }
                    }
                }
            }

            model.stringDate = (date) => {
                let newDate = new Date(date);

                let day = newDate.getDate();
                let month = newDate.getMonth() + 1;
                let year = newDate.getFullYear();

                if (month < 10) {
                    if (day < 10) {
                        return `0${month}/0${day}/${year}`;
                    } else {
                        return `0${month}/${day}/${year}`;
                    }
                } else {
                    if (day < 10) {
                        return `${month}/0${day}/${year}`;
                    } else {
                        return `${month}/${day}/${year}`;
                    }                    
                }
            }

            

            ko.bindingHandlers.selectPicker = ServiceTRAXBindingHandlers.selectPicker;
            ko.bindingHandlers.datepicker = ServiceTRAXBindingHandlers.datepicker;
            ko.applyBindings(model);
        });
    </script>
}

@section StyleSheets {
    <link rel="stylesheet" href="~/css/datepicker.css" />
}

<div class="container-fluid">
    <br />
    <div class="row">
        <div class="col pl-0 ml-0">
            <h2>Payroll</h2>
        </div>
    </div>
    <br />
    <div>
        <form class="form-group">
            <div class="form-row mb-3">
                <div class="col-2">
                    <label>Start Date</label>
                    <div class="input-group" id="triggerStartDate">
                        <input type="text" class="form-control"
                               autocomplete="off"
                               id="startDate"
                               data-bind="datepicker: startDate, datepickerOptions: { trigger: '#triggerStartDate' }"
                               required />
                        <div class="input-group-append simulate-button">
                            <span class="input-group-text input-group-append-custom">
                                <i class="fas fa-calendar"></i>
                            </span>
                        </div>
                    </div>
                </div>
                <div class="col-2">
                    <label>End Date</label>
                    <div class="input-group" id="triggerEndDate">
                        <input type="text" class="form-control"
                               autocomplete="off"
                               id="endDate"
                               data-bind="datepicker: endDate, datepickerOptions: { trigger: '#triggerEndDate' }"
                               required />
                        <div class="input-group-append simulate-button">
                            <span class="input-group-text input-group-append-custom">
                                <i class="fas fa-calendar"></i>
                            </span>
                        </div>
                    </div>
                </div>
                <div class="col-2">
                    <label>Batch ID</label>
                    <input type="text" class="form-control" data-bind="value: batchID" />
                </div>
                <div class="col-2">
                    <label>
                        Payroll Company
                    </label>
                    <div class="input-group">
                        <select class="selectpicker"
                                id="payrollCompany"
                                data-style="btn-white shadow-sm"
                                data-bind="selectPicker:true, options: payrollCompanies, value: payrollCompany"
                                data-none-selected-text="...">
                        </select>
                    </div>
                </div>
                <div class="col-2" style="align-self: flex-end;">
                    <button class="btn btn-primary" data-bind="click: () => $root.generateCSV()">Generate CSV</button>
                    <a href="#" id="callCSV" style="display: none;"></a>
                </div>
            </div>
        </form>
    </div>
</div>
